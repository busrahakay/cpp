C, in contrast, is simpler.  We can write:

double sqrt(double);
sqrt(2.0);

When we pass an argument of a wrong type:

sqrt("Hello!");

We get this error:

error: incompatible type for argument 1 of ‘sqrt’
note: expected ‘double’ but argument is of type ‘char *’

In C++, we get this error:

error: no matching function for call to ‘sqrt(const char [7])’
note: candidate: ‘double sqrt(double)’
note: no known conversion for argument 1 from ‘const char [7]’ to ‘double’

It would be good to write templated code in C++ that produced such
simple messages.  Instead, for code like this:

int
main()
{
  struct A
  {
  };

  max(A(), A());
}

We get this error:

/usr/local/gcc-8.1.0/include/c++/8.1.0/bits/stl_algobase.h:224:15:
error: no match for ‘operator<’ (operand types are ‘const main()::A’ and ‘const main()::A’)
